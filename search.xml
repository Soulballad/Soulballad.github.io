<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用Github Pages和Hexo搭建博客</title>
      <link href="2020/10/27/shi-yong-github-pages-he-hexo-da-jian-bo-ke/"/>
      <url>2020/10/27/shi-yong-github-pages-he-hexo-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><ul><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_14">● 前言</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_22">● 入门</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Nodejsfont_33">● 安装 Node.js</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Gitfont_40">● 安装 Git</a></li><li><ul><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Gitfont_46">• 检验Git是否安装成功</a></li></ul></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_Hexo_font_56">● 安装Hexo</a></li><li><ul><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_Hexo_font_64">• Hexo 初始化配置</a></li></ul></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_73">● 本地查看效果</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Github_Pages_font_86">● 将博客部署到 Github Pages 上</a></li><li><ul><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000___Github_font_89">• 注册 Github 账户</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_92">• 创建项目代码库</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__SSH_font_96">• 配置 SSH 密钥</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__GitHub_font_127">• 在 GitHub 账户中添加你的公钥</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__font_140">• 测试</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Git__font_153">• 配置 Git 个人信息</a></li></ul></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Hexo__Github_font_162">● 将本地的 Hexo 文件更新到 Github 的库中</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_201">● 在博客上发表文章</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_259">● 为博客更换自己喜欢的主题</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000__Hexo_font_301">● 为你的 Hexo 博客配置个性域名</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_327">● 博客美化和实用功能的添加</a></li><li><a href="https://blog.csdn.net/qq_36759224/article/details/82121420#font_colorFF000_font_332">● 结语</a></li></ul><hr><h1 id="●-前言"><a href="#●-前言" class="headerlink" title="● 前言"></a>● 前言</h1><p>这是一篇有关如何使用 Github Pages 和 Hexo 搭建属于自己独立博客的详尽教程，本人是软件工程专业本科生，目前只学习了C和C++编程语言，对网站开发的有关知识几乎为零，这也是我搭建好自己的博客之后写的第一篇博客，刚开始搭建博客的时候自己也是网上各种百度，由于自己属于小白那种，历经了千辛万苦才弄好，所以借这个机会写一篇小白真正能看懂的博客搭建教程，教你一步一步走向成功的彼岸！</p><p>推荐文章： <a href="http://www.cnblogs.com/jhzhu/p/3893297.html">《我为什么写博客》</a> （By 知明所以）<br>　　　　 　<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/">《为什么你应该（从现在开始就）写博客》</a> (By 刘未鹏 | Mind Hacks)</p><h1 id="●-入门"><a href="#●-入门" class="headerlink" title="● 入门"></a>● 入门</h1><blockquote><p>Github Pages</p></blockquote><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</p><blockquote><p>Hexo</p></blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="●-安装-Node-js"><a href="#●-安装-Node-js" class="headerlink" title="● 安装 Node.js"></a>● 安装 Node.js</h1><p><a href="https://nodejs.org/en/download/">点击此处</a>访问官网，按需下载相应版本，默认安装可以了<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY0ODFkMzc0MC5wbmc" alt="img"></p><p>注：本人在安装过程中出现了Warning 1909,无法创建快捷方式，这种情况很少出现，如果在安装过程中也有这种情况请参考百度文库（win10系统实测可行）：<a href="https://wenku.baidu.com/view/4ad59110964bcf84b9d57ba5.html">《Win7安装程序警告1909无法创建快捷方式》</a><br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY0Yzk5ZjcwOC5wbmc" alt="img"></p><h1 id="●-安装-Git"><a href="#●-安装-Git" class="headerlink" title="● 安装 Git"></a>● 安装 Git</h1><p><a href="https://git-scm.com/download/win">点击此处</a>访问官网，按需下载相应版本，默认安装即可<br>参考资料：<a href="https://www.cnblogs.com/jytx/p/5602927.html">《如何在windows下安装GIT》</a> （By 俊雨廷休）<br>　　　　　<a href="http://git.oschina.net/progit/">《Pro Git（中文版）》</a></p><h2 id="•-检验Git是否安装成功"><a href="#•-检验Git是否安装成功" class="headerlink" title="• 检验Git是否安装成功"></a>• 检验Git是否安装成功</h2><p>同时按下 Win 键和 R 键打开运行窗口,输入 cmd ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 Git GUI Here 和 Git Bash Here两个选项，第一个是图形界面的Git操作，另一个是命令行</p><pre><code> $ git --version   $ node -v   $ npm -v123</code></pre><p><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY0ZWU4YTc5NC5wbmc" alt="img"><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY1MGVjMjA5Mi5wbmc" alt="img"></p><h1 id="●-安装Hexo"><a href="#●-安装Hexo" class="headerlink" title="● 安装Hexo"></a>● 安装Hexo</h1><p>选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：Ｅ\TRHX_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功</p><pre><code> $ npm install hexo-cli -g   $ npm install hexo-deployer-git --save  12</code></pre><p><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY1M2Q0YjAxOS5wbmc" alt="img"></p><h2 id="•-Hexo-初始化配置"><a href="#•-Hexo-初始化配置" class="headerlink" title="• Hexo 初始化配置"></a>• Hexo 初始化配置</h2><p>在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：E\TRHX_Blog\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令，如图所示则安装成功</p><pre><code> $ hexo init1</code></pre><p><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY1NjZiNGI2Yi5wbmc" alt="img"></p><p>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY1OGQyZWVlNS5wbmc" alt="img"></p><h1 id="●-本地查看效果"><a href="#●-本地查看效果" class="headerlink" title="● 本地查看效果"></a>● 本地查看效果</h1><p>执行以下命令，执行完即可登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果</p><pre><code> $ hexo generate   $ hexo server  12</code></pre><p>显示以下信息说明操作成功：</p><pre><code> INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.1</code></pre><p>登录 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看效果：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY1YjdjNzRkMi5wbmc" alt="img"></p><h1 id="●-将博客部署到-Github-Pages-上"><a href="#●-将博客部署到-Github-Pages-上" class="headerlink" title="● 将博客部署到 Github Pages 上"></a>● 将博客部署到 Github Pages 上</h1><p>到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Github Pages上</p><h2 id="•-注册-Github-账户"><a href="#•-注册-Github-账户" class="headerlink" title="• 注册 Github 账户"></a>• 注册 Github 账户</h2><p><a href="https://github.com/">点击此处</a>访问 Github 官网，点击 Sign Up 注册账户</p><h2 id="•-创建项目代码库"><a href="#•-创建项目代码库" class="headerlink" title="• 创建项目代码库"></a>• 创建项目代码库</h2><p>点击 New repository 开始创建，步骤及注意事项见下图：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY1ZTA5MzBjMi5wbmc" alt="img"></p><h2 id="•-配置-SSH-密钥"><a href="#•-配置-SSH-密钥" class="headerlink" title="• 配置 SSH 密钥"></a>• 配置 SSH 密钥</h2><p>只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：Ｅ\TRHX_Blog） Git Bash Here 输入以下命令：</p><pre><code> $ ssh-keygen -t rsa -C &quot;your email@example.com&quot;  //引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com12</code></pre><p>之后会出现：</p><pre><code> Generating public/private rsa key pair.   Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):   //到这里可以直接回车将密钥按默认文件进行存储123</code></pre><p>然后会出现：</p><pre><code> Enter passphrase (empty for no passphrase):   //这里是要你输入密码，其实不需要输什么密码，直接回车就行  Enter same passphrase again:  123</code></pre><p>接下来屏幕会显示：</p><pre><code> Your identification has been saved in /c/Users/you/.ssh/id_rsa.   Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.   The key fingerprint is:   这里是各种字母数字组成的字符串，结尾是你的邮箱   The key&#39;s randomart image is:   这里也是各种字母数字符号组成的字符串  123456</code></pre><p>运行以下命令，将公钥的内容复制到系统粘贴板上</p><pre><code> $ clip &lt; ~/.ssh/id_rsa.pub1</code></pre><h2 id="•-在-GitHub-账户中添加你的公钥"><a href="#•-在-GitHub-账户中添加你的公钥" class="headerlink" title="• 在 GitHub 账户中添加你的公钥"></a>• 在 GitHub 账户中添加你的公钥</h2><p>① 登陆 GitHub，进入 Settings：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY2MDZlNzU1OC5wbmc" alt="img"></p><p>② 点击 SSH and GPG Keys：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY2MjJiNDU4OC5wbmc" alt="img"></p><p>③ 选择 New SSH key：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY2M2ViMWFiMi5wbmc" alt="img"></p><p>④ 粘贴密钥：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY2YmMxZmM4Ny5wbmc" alt="img"></p><h2 id="•-测试"><a href="#•-测试" class="headerlink" title="• 测试"></a>• 测试</h2><p>输入以下命令：注意：<a href="mailto:&#103;&#x69;&#116;&#64;&#x67;&#105;&#116;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;">&#103;&#x69;&#116;&#64;&#x67;&#105;&#116;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;</a>不要做任何更改！</p><pre><code> $ ssh -T git@github.com1</code></pre><p>之后会显示：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY2ZTNiNDgwMy5wbmc" alt="img"></p><p>输入 yes 后会显示：<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY3MDJjNDZkNi5wbmc" alt="img"></p><p>此时表示设置正确</p><h2 id="•-配置-Git-个人信息"><a href="#•-配置-Git-个人信息" class="headerlink" title="• 配置 Git 个人信息"></a>• 配置 Git 个人信息</h2><p>Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致</p><pre><code> $ git config --global user.name &quot;此处填你的用户名&quot;   $ git config --global user.email  &quot;此处填你的邮箱&quot;12</code></pre><p>到此为止 SSH Key 配置成功，本机已成功连接到 Github</p><h1 id="●-将本地的-Hexo-文件更新到-Github-的库中"><a href="#●-将本地的-Hexo-文件更新到-Github-的库中" class="headerlink" title="● 将本地的 Hexo 文件更新到 Github 的库中"></a>● 将本地的 Hexo 文件更新到 Github 的库中</h1><p>① 登录 Github 打开自己的项目 your name.github.io<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY3MjBjY2FlMC5wbmc" alt="img"></p><p>② 鼠标移到 Clone or download 按钮，选择 Use SSH<br><img src="E:\笔记\自己整理\typora-user-images\20190816220246218.png" alt="img"></p><p>③ 一键复制地址<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY3NmNiM2RhNC5wbmc" alt="img"></p><p>④ 打开你创建的 Hexo 文件夹（如：E:\TRHX_Blog\Hexo），右键用记事本（Notepad++或者VS code等都可以）打开该文件夹下的 _config.yml 文件<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY3OGI4YmEzZS5wbmc" alt="img"></p><p>⑤ 按下图修改 _config.yml 文件并保存<br><img src="E:\笔记\自己整理\typora-user-images\aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDMvMjUvNWM5OGY3ZTExZWVkNy5wbmc" alt="img"></p><p>⑥ 在 Hexo 文件夹下分别执行以下命令</p><pre><code> $ hexo g   $ hexo d12</code></pre><p>或者直接执行</p><pre><code> $ hexo g -d1</code></pre><p>执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功</p><pre><code> ERROR Deployer not found: git1</code></pre><p>需要执行以下命令再安装一次：</p><pre><code> npm install hexo-deployer-git --save1</code></pre><p>再执行 <code>hexo g -d</code>，你的博客就会部署到 Github 上了</p><p>⑦ 访问博客</p><p>你的博客地址：https://你的用户名.github.io，比如我的是：<a href="https://trhx.github.io/">https://trhx.github.io</a> ,现在每个人都可以通过此链接访问你的博客了</p><h1 id="●-在博客上发表文章"><a href="#●-在博客上发表文章" class="headerlink" title="● 在博客上发表文章"></a>● 在博客上发表文章</h1><p>博客已经成功搭建了，但是我们该怎么写博客呢？</p><p>① 新建一个空文章，输入以下命令，会在项目 \Hexo\source_posts 中生成 文章标题.md 文件，文章标题根据需要命名</p><pre><code> $ hexo n &quot;文章标题&quot;1</code></pre><p>也可以直接在 \Hexo\source_posts 目录下右键鼠标新建文本文档，改后缀为 .md 即可，这种方法比较方便</p><p>② 用编辑器编写文章</p><p>md 全称 Markdown， Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会， .md 文件可以使用支持 Markdown 语法的编辑器编辑，然后保存文件到 \Hexo\source_posts 文件夹下即可</p><p>推荐 Windows 上使用 MarkdownPad2 或者小书匠 编辑器，macOS 上使用 Mou 编辑器，Linux 上使用 Remarkable编辑器，Web 端上使用CSDN ，其他编辑器推荐可以参考我的另一篇文章：<a href="https://blog.csdn.net/qq_36759224/article/details/82229243">《最新主流 Markdown 编辑器推荐》</a></p><p>文章标题，标签，分类，封面图片，摘要等，可以在 Front-matter 里面配置（Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/zh-cn/docs/front-matter">https://hexo.io/zh-cn/docs/front-matter</a> ），举个例子：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span>layout: 页面布局（配合主题文档使用）title: 文章名称date: 文章日期comments: 文章是否开启评论photos: 文章封面图（仅部分主题支持）tags:   <span class="token list punctuation">-</span> 文章标签一  <span class="token list punctuation">-</span> 文章标签二categories: 文章分类<span class="token title important">description: 文章描述，即要在首页显示的摘要（仅部分主题支持）<span class="token punctuation">---</span></span>这里是摘要<span class="token comment" spellcheck="true">&lt;!-- more --></span>这里是正文注意：description 和 <span class="token comment" spellcheck="true">&lt;!-- more --></span> 方式显示摘要二选一即可，部分主题不支持description，每个配置英文冒号后面要空一格，不同主题配置有所差异，具体要参考主题文档1234567891011121314151617181920</code></pre><p>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p><pre><code> $ hexo g   $ hexo d12</code></pre><p>或者将两个命令合二为一输入以下命令：</p><pre><code> $ hexo d -g 1</code></pre><p>现在访问你的博客就可以看见写好的文章啦！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Github Pages </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/27/hello-world/"/>
      <url>2020/10/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
